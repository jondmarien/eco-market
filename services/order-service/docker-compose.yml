version: '3.8'

services:
  # Order Service
  order-service:
    build: .
    ports:
      - "8003:8080"
    environment:
      - PORT=8080
      - POSTGRESQL_URL=postgres://orders_user:orders_password@postgres-orders:5432/orders_db?sslmode=disable
      - REDIS_URL=redis://redis-orders:6379
      - ENVIRONMENT=development
    depends_on:
      - postgres-orders
      - redis-orders
    networks:
      - order-network
    restart: unless-stopped

  # PostgreSQL Database for Orders
  postgres-orders:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=orders_db
      - POSTGRES_USER=orders_user
      - POSTGRES_PASSWORD=orders_password
    volumes:
      - orders_postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    networks:
      - order-network
    restart: unless-stopped

  # Redis for Order Caching
  redis-orders:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - orders_redis_data:/data
    networks:
      - order-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Redis Commander for debugging
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=redis-orders:redis-orders:6379
    ports:
      - "8082:8081"
    networks:
      - order-network
    depends_on:
      - redis-orders

volumes:
  orders_postgres_data:
  orders_redis_data:

networks:
  order-network:
    driver: bridge
