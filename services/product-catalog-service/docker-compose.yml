services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: product-catalog-db
    environment:
      POSTGRES_DB: product_catalog
      POSTGRES_USER: ecomarket
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecomarket -d product_catalog"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Product Catalog Service
  product-catalog:
    build: .
    container_name: product-catalog-service
    ports:
      - "8000:8000"
    environment:
      POSTGRES_SERVER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: product_catalog
      POSTGRES_USER: ecomarket
      POSTGRES_PASSWORD: password
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: product-catalog-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
